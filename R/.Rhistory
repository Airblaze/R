getwd()
setwd("/Users/srikanth.mannepalle/Desktop/Git/R")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome <- read.csv("rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
head(outcome,1)
outcome[, 11]
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv',header=F)
?stop
names(cols(outcome)
)
names(outcome)
outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')
names(outcome)
if('AL' in outcome$State)
if('AL' %in% outcome$State)
)
'AL' %in% outcome$State
'TX' %in% outcome$State
'sfTX' %in% outcome$State
!('AL' %in% outcome$State)
best <- function(state, outcome) {    ## Read outcome data        outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')    possible_outcomes<-c("heart attack","heart failure","pneumonia")    if (!(state %in% outcome$state)        stop('invalid state')        if(!(outcome %in% possible_outcomes))            stop('invalid outcome')        }
best <- function(state, outcome) {    ## Read outcome data        outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')    possible_outcomes<-c("heart attack","heart failure","pneumonia")    if (!(state %in% outcome$state)        stop('invalid state')        if(!(outcome %in% possible_outcomes))            stop('invalid outcome')        }
traceback()
trace()
best <- function(state, outcome) {}
best
best <- function(state, outcome) {    ## Read outcome data        outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')    possible_outcomes<-c("heart attack","heart failure","pneumonia")    if (!(state %in% outcome$state))        stop('invalid state')    if(!(outcome %in% possible_outcomes))        stop('invalid outcome')    }
best <- function(state, outcome) {    ## Read outcome data        outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')    possible_outcomes<-c("heart attack","heart failure","pneumonia")    if (!(state %in% outcome$state))        stop('invalid state')    if(!(outcome %in% possible_outcomes))        stop('invalid outcome')    }
}
}
;
getwd()
#head(s[[1]],2)
}
}
source('~/.active-rstudio-document')
else
source('~/Desktop/Git/R/best.R')
else
}
}
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
install.packages(c("caret", "pROC", "rpart", "gbm", "reshape2",
"kernlab", "partykit", "gbm", "sqldf", "plyr"),
repos = "http://cran.r-project.org",
dependencies = c("Depends", "Suggests"))
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
