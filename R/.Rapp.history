apply(mean,split(iris$Sepal.Length,iris$Species)[,3])
lapply(split(iris$Sepal.Length,iris$Species),mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(split(mtcars$hp, mtcars$cyl), avg)
lapply(split(mtcars$hp, mtcars$cyl), average)
lapply(split(mtcars$hp, mtcars$cyl), sum)
lapply(split(mtcars$hp, mtcars$cyl), count)
lapply(split(mtcars$hp, mtcars$cyl), mean)
209.2143 - 82.63636
debug(ls)
ls
set.seed(20)
?set.seed()
?set.seed
}
clear
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<0.5+2*x+e
y<-0.5+2*x+e
y
summary(y)
plot(x,y)
set.seed(1)#
rpois(5, 2)
?rpois
set.seed(1)#
rpois(5, 2)
set.seed(10)#
x <- rep(0:1, each = 5)#
e <- rnorm(10, 0, 20)#
y <- 0.5 + 2 * x + e
plot(x,y)
best <- function(state, outcome) {  ## Read outcome data#
  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  if (!(state %in% outcome$state))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best('TX','df')
getwd()
setwd('/Users/srikanth.mannepalle/Desktop/Git/R')
best('TX','df')
best('AL','df')
best('Az','df')
best('AL','df')
best(AL,'df')
best('AL','df')
output$state
outcome$state
best('TX','df')
best('AZ','df')
best <- function(state, outcome) {  ## Read outcome data#
  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  print(outcome$state)  if (!(state %in% outcome$state))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best('AZ','df')
best <- function(state, outcome) {  ## Read outcome data#
  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  #print(outcome$state)  print state  if (!(state %in% outcome$state))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best <- function(state, outcome) {  ## Read outcome data#
  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  #print(outcome$state)  print state  if (!(state %in% outcome$state))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best <- function(state, outcome) {  ## Read outcome data  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  #print(outcome$state)  print state  if (!(state %in% outcome$state))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
}
best <- function(state, outcome) {  ## Read outcome data  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  #print(outcome$state)  print state  if (!(state %in% outcome$state))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best <- function(state, outcome) {  ## Read outcome data  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  #print(outcome$state)  print(state)  if (!(state %in% outcome$state))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best('AZ','df')
best <- function(state, outcome) {  ## Read outcome data  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  if (!(state %in% outcome[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best('AZ','df')
best('AZ','heart attack')
best('AZ','heart failure')
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  if (!(state %in% outcome[,7]))    stop('invalid state')  print(possible_outcomes)  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outcome=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  if (!(state %in% outcome[,7]))    stop('invalid state')  print(length(possible_outcomes))  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')#
}
best('AZ','pneumonia')
best('AZ','asaas')
best('sdfsd','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  output.sub=subset(output,output[,7]==state)  print(output.sub)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  output.sub=subset(output,output[,7]==state)  head(output.sub,1)
}
best('AZ','pneumonia')
a=1
m<-c(1,2,3)
m$a
m$1
m[1]
m[a]
p<-c('a'=1,'b'=2)
p
p$a
p[a]
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else colnumber=outcome_col[outcome]#
  output.sub=subset(output,output[,7]==state)  #head(output.sub,1)#
  maxval<-max(output.sub[colnumber], na.rm = TRUE)  print(maxval)}
best('AZ','pneumonia')
traceback()
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else colnumber=outcome_col[outcome]#
  output.sub=subset(output,output[,7]==state)  #head(output.sub,1)#
  maxval<-max(output.sub[[colnumber]], na.rm = TRUE)  print(maxval)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else colnumber=outcome_col[outcome]#
  output.sub=subset(output,output[,7]==state)  #head(output.sub,1)  print(colnumber)  maxval<-max(output.sub[[colnumber]], na.rm = TRUE)  print(maxval)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else colnumber=outcome_col[outcome]#
  output.sub=subset(output,output[,7]==state)  #head(output.sub,1)  print(output.sub[colnumber])  maxval<-max(output.sub[colnumber], na.rm = TRUE)  print(maxval)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else colnumber=outcome_col[outcome]#
  output.sub=subset(output,output[,7]==state,na.rm=T)  #head(output.sub,1)  print(output.sub[colnumber])  maxval<-max(output.sub[colnumber])  print(maxval)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else colnumber=outcome_col[outcome]#
  #output.sub=subset(output,output[,7]==state,na.rm=T)  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia")], na.rm = TRUE)  tapply(s,takeMax)  #print(output.sub[colnumber])  #maxval<-max(output.sub[colnumber])  #print(maxval)
}
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  #output.sub=subset(output,output[,7]==state,na.rm=T)  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)  #print(output.sub[colnumber])  #maxval<-max(output.sub[colnumber])  #print(maxval)}
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)  #outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  '  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)  '}
best('AZ',pneumonia)
best('AZ','pneumonia')
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack"=11,"heart failure"=17,"pneumonia")  #outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  '  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)  '}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack"=11,"heart failure"=17,"pneumonia")  #outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else pass    #colnumber=outcome_col[outcome]#
  '  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)  '}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack"=11,"heart failure"=17,"pneumonia")  #outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else True    #colnumber=outcome_col[outcome]#
  '  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)  '}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  '  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)  '}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  #s<-split(output,output$State)  #takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia"), na.rm = TRUE)  #tapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death (Mortality) Rates from Heart Attack", "Hospital 30-Day Death (Mortality) Rates from Heart Failure", "Hospital 30-Day Death (Mortality) Rates from Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)#
}
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("Hospital 30-Day Death \(Mortality\) Rates from Heart Attack", "Hospital 30-Day Death \(Mortality\) Rates from Heart Failure", "Hospital 30-Day Death \(Mortality\) Rates from Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)#
}
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("[:alnum:]*Heart Attack", "[:alnum:]*Heart Failure", "[:alnum:]*Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)#
}
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  takeMax <- function(x) max(x[, c("\[:alnum:\]*Heart Attack", "\[:alnum:\]*Heart Failure", "\[:alnum:\]*Pneumonia"), na.rm = TRUE)  tapply(s,takeMax)#
}
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  tapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  sapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  print(x[,colnumber])  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  sapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  print(output[,colnumber])  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  sapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(output[,colnumber],1)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  sapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(output[[,colnumber]],1)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  sapply(s,takeMax)#
}
best('AZ','pneumonia')
outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)
outcome_col[11]
outcome_col['11']
outcome_col[pneumonia]
outcome_col['pneumonia']
output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')
output[1]
output[][1]]
output[[1]]
head(output[[1]])
head(output[1])
typeof(head(output[1]))
typeof(head(output[[1]]))
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(output[,colnumber],1)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  sapply(s,takeMax)#
}
best('AZ','pneumonia')
traceback()
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(output[,colnumber],1)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  sapplyn (s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(output[,colnumber],1)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  sapply(s,takeMax)#
}
best('AZ','pneumonia')
traceback()
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(output[,colnumber],1)  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  lapply(s,takeMax)#
}
best('AZ','pneumonia')
traceback()
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(output[,colnumber])  takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  print(s)
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(s,2)}
best('AZ','pneumonia')
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  head(s[[1]],2)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  print(s[1])  #head(s[[1]],2)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  print(s[1])  #head(s[[1]],2)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  s<-split(output,output$State)  print(s[[1]])  #head(s[[1]],2)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]  s<-split(output,output$State)  lapply(s,mean)}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]  s<-split(output,output$State)  lapply(s,mean,na.rm=T)}
best('AZ','pneumonia')
warnings()
best <- function(state, outcome) {  ## Read outcome data  output=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]  s<-split(output,output$State)  #lapply(s,mean,na.rm=T)}
warnings()
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  for( row in nrow(outputFile[outputFile$State==state]))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFile[row,2],outputFile[row,7],outputFile[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
traceback()
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  for( row in nrow(outputFile<-outputFile$State==state))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFile[row,2],outputFile[row,7],outputFile[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  for( row in nrow(outputFrame<-outputFile$State==state))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile(where(outputFile$State==state))  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[where(outputFile$State==state)]  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state)]  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  for( row in nrow(outputFrame))  {    print(outputFile[row,colnumber])    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    #if(!(outputFile[row,colnumber]=='Not Available'))    Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    #if(!(outputFile[row,colnumber]=='Not Available'))    Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    print(row)    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  for( row in nrows(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    print(row)    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    print(row)    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  print(outputFrame)  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    print(row)    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  head(outputFrame,2)  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  head(outputFrame)  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  head(outputFrame)  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  #Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),]  head(outputFrame)  for( row in nrow(outputFrame))  {    print(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber])    #if(!(outputFile[row,colnumber]=='Not Available'))    Processed_dataframe<-c(Processed_dataframe,c(outputFrame[row,2],outputFrame[row,7],outputFrame[row,colnumber]))#
  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]  head(outputFrame)  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))    Processed_dataframe<-c(Processed_dataframe,outputFrame)  }#
  Processed_dataframe  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]  head(outputFrame)  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))    Processed_dataframe<-c(Processed_dataframe,outputFrame)  }#
  print(nrow(Processed_dataframe))  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]  head(outputFrame)  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))    Processed_dataframe<-c(Processed_dataframe,outputFrame)  }#
  print(Processed_dataframe)  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  #print(which(outputFile$State==state))  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]  #head(outputFrame)  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))    Processed_dataframe<-c(Processed_dataframe,outputFrame)  }#
  print(Processed_dataframe)  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]  #for( row in nrow(outputFrame))  #{  #  if(!(outputFile[row,colnumber]=='Not Available'))  #  Processed_dataframe<-c(Processed_dataframe,outputFrame)  #}  print(outputFrame)  #print(Processed_dataframe)  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]  for( row in nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])  }  print(Processed_dataframe)  #print(Processed_dataframe)  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]  for( row in 1:nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])  }  print(Processed_dataframe)  #print(Processed_dataframe)  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {  ## Read outcome data  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')  possible_outcomes<-c("heart attack","heart failure","pneumonia")  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))    stop('invalid state')  if(!(outcome %in% possible_outcomes))    stop('invalid outcome')  else     colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]  for( row in 1:nrow(outputFrame))  {    if(!(outputFile[row,colnumber]=='Not Available'))      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])  }  max(Processed_dataframe[,colnumber])  #print(Processed_dataframe)  #print(Processed_dataframe)  #s<-split(Processed_dataframe,outputFrame$State)  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
traceback()
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  max(Processed_dataframe[,,colnumber])#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
traceback()
best('AZ','pneumonia')
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  max(Processed_dataframe[[,]][[colnumber]])#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  max(Processed_dataframe[,][colnumber])#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  max(Processed_dataframe$colnumber)#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  print(Processed_dataframe$colnumber)#
  max(Processed_dataframe$colnumber)#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  print(Processed_dataframe$colnumber)#
  max(Processed_dataframe[,colnumber])#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  print(Processed_dataframe$17)#
  max(Processed_dataframe[,colnumber])#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  print(Processed_dataframe)#
  max(Processed_dataframe[,colnumber])#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
best <- function(state, outcome) {#
  ## Read outcome data#
  outputFile=read.csv('rprog_data_ProgAssignment3-data/outcome-of-care-measures.csv')#
  possible_outcomes<-c("heart attack","heart failure","pneumonia")#
  outcome_col<-c("heart attack"=11,"heart failure"=17,"pneumonia"=23)#
  if (!(state %in% output[,7]))#
    stop('invalid state')#
  if(!(outcome %in% possible_outcomes))#
    stop('invalid outcome')#
  else #
    colnumber=outcome_col[outcome]#
  Processed_dataframe<-c(NULL)#
  outputFrame<-outputFile[which(outputFile$State==state),c(2,7,colnumber)]#
#
  for( row in 1:nrow(outputFrame))#
  {#
    print(outputFile[row,colnumber])#
    if(!(outputFile[row,colnumber]=='Not Available'))#
      Processed_dataframe<-c(Processed_dataframe,outputFrame[row,])#
  }#
  print(Processed_dataframe)#
  max(Processed_dataframe[,colnumber])#
  #print(Processed_dataframe)#
  #print(Processed_dataframe)#
  #s<-split(Processed_dataframe,outputFrame$State)#
  #takeMax <- function(x) max(x[,colnumber], na.rm = TRUE)#
  #lapply(s,takeMax)#
}
best('AZ','pneumonia')
